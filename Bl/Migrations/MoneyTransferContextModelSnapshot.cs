// <auto-generated />
using System;
using Bl;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bl.Migrations
{
    [DbContext(typeof(MoneyTransferContext))]
    partial class MoneyTransferContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bl.TbBankAccount", b =>
                {
                    b.Property<string>("AccountNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("AccountBalance")
                        .HasColumnType("decimal(10, 3)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("AccountNumber");

                    b.HasIndex("UserId");

                    b.ToTable("TbBankAccounts");
                });

            modelBuilder.Entity("Bl.TbFinancialTransaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TransactionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<string>("ReceiverAccountNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SenderAccountNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("TransactionAmount")
                        .HasColumnType("decimal(10, 3)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime");

                    b.HasKey("TransactionId");

                    b.HasIndex("ReceiverAccountNumber");

                    b.HasIndex("SenderAccountNumber");

                    b.ToTable("TbFinancialTransactions");
                });

            modelBuilder.Entity("Bl.TbUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId");

                    b.ToTable("TbUsers");
                });

            modelBuilder.Entity("Bl.VwTransWacountDetail", b =>
                {
                    b.Property<decimal>("RaccountBalance")
                        .HasColumnType("decimal(10, 3)")
                        .HasColumnName("RAccountBalance");

                    b.Property<string>("RaccountNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("RAccountNumber");

                    b.Property<string>("ReceiverAccountNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RuserId")
                        .HasColumnType("int")
                        .HasColumnName("RUserID");

                    b.Property<decimal>("SaccountBalance")
                        .HasColumnType("decimal(10, 3)")
                        .HasColumnName("SAccountBalance");

                    b.Property<string>("SaccountNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SAccountNumber");

                    b.Property<string>("SenderAccountNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SuserId")
                        .HasColumnType("int")
                        .HasColumnName("SUserID");

                    b.Property<decimal>("TransactionAmount")
                        .HasColumnType("decimal(10, 3)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int")
                        .HasColumnName("TransactionID");

                    b.ToTable((string)null);

                    b.ToView("VwTransWAcountDetails", (string)null);
                });

            modelBuilder.Entity("Bl.TbBankAccount", b =>
                {
                    b.HasOne("Bl.TbUser", "User")
                        .WithMany("TbBankAccounts")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_TbBankAccounts_TbUsers");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bl.TbFinancialTransaction", b =>
                {
                    b.HasOne("Bl.TbBankAccount", "ReceiverAccountNumberNavigation")
                        .WithMany("TbFinancialTransactionReceiverAccountNumberNavigations")
                        .HasForeignKey("ReceiverAccountNumber")
                        .IsRequired()
                        .HasConstraintName("FK_TbFinancialTransactions_TbBankAccounts3");

                    b.HasOne("Bl.TbBankAccount", "SenderAccountNumberNavigation")
                        .WithMany("TbFinancialTransactionSenderAccountNumberNavigations")
                        .HasForeignKey("SenderAccountNumber")
                        .IsRequired()
                        .HasConstraintName("FK_TbFinancialTransactions_TbBankAccounts2");

                    b.Navigation("ReceiverAccountNumberNavigation");

                    b.Navigation("SenderAccountNumberNavigation");
                });

            modelBuilder.Entity("Bl.TbBankAccount", b =>
                {
                    b.Navigation("TbFinancialTransactionReceiverAccountNumberNavigations");

                    b.Navigation("TbFinancialTransactionSenderAccountNumberNavigations");
                });

            modelBuilder.Entity("Bl.TbUser", b =>
                {
                    b.Navigation("TbBankAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
